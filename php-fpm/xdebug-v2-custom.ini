[xdebug]
;
; Setup Notes
;

; - You can verify that "phpstorm" is listening on the configured port via:
;   - Linux: netstat -tulpn | grep "9000" (swap 9000 for configured IDE listening port)
;   - Mac: sudo lsof -i -n -P | grep "TCP.*:9000" (swap 9000 for configured IDE listening port)
;   - Windows: ?
; - Steps to Debug xDebug not working:
;   - php-fpm (workspace will be pretty similar)
;     - Check if xDebug is installed:
;       - Run docker-compose exec php-fpm bash
;       - Run php-config --extension-dir to get the php extensions dir
;       - Run ls THE_DIR_FROM_PREV_STEP to view installed extensions
;       - If xdebug is not present, double check your PHP_FPM_INSTALL_XDEBUG env var is set to true, and look for 
;         errors during the build process that indicate failure to install xdebug. The installation process depends on 
;         the PHP version--see [laradock dir]/php-fpm/Dockerfile > xDebug: section
;     - Check if xDebug is loaded/running:
;       - Add phpinfo(); exit; to the beginning of your public/index.php script and search for xdebug. If you don't see 
;         sections detailing xdebug settings (ie. remote_port), it's not loaded. xdebug is supposedly supposed to start 
;         automatically if PHP_FPM_INSTALL_XDEBUG = true, but if it doesn't, you can run ./php-fpm xdebug 
;         start|stop|status from the same place you run docker-compose to manually start/stop it
;     - When attempting a debug session, check xdebug logs:
;       - You should see that it connected: http://zsl.io/BS8H3d
;       - If you have set breakpoints, you should see xdebug communicating with your IDE for each breakpoint:
;         http://zsl.io/eRjb09
;     - Make sure your PHPStorm Config is correct:
;       - Set the Debug port to your configured xdebug.client_port: http://zsl.io/37fLTD
;       - Set your DBGp Proxy settings to IDE Key: PHPSTORM & Port: [client_port]: http://zsl.io/cNpz8P
;       - Set your server settings correctly: http://zsl.io/va14WN
;         - NOTE: It evidently doesn't like the leading slash on the /var/www for path mappings
;         - NOTE: I was not able to get zero-config working w/ no path mappings
;     - If xDebug is connecting to PHPStorm (as shown in the xdebug logs), PHPStorm should show some sign of receiving 
;       the connection, and lead you form there (might have path mappings or other settings wrong)

;
; Refs:
; - Settings Docs: https://2.xdebug.org/docs/all_settings
; - xDebug v2 > v3 Upgrade Guide: https://xdebug.org/docs/upgrade_guide
; - How xDebug Works w/ PHPStorm: https://crosp.net/blog/software-development/web/php/understanding-and-using-xdebug-with-phpstorm-and-magento-remotely/

; NOTE: The actual debug.so extension is NOT SET HERE but rather (/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini)

; Selects the host where the debug client is running (ie. Your computer, or a special internal hostname that routes 
; to your computer from within the docker container)
; Supposedly, host.docker.internal works on both Windows & Mac, but docker.for.mac.localhost only works on Mac
;xdebug.remote_host=host.docker.internal
;xdebug.remote_host=dockerhost
xdebug.remote_host=docker.for.mac.localhost
; If enabled, the xdebug.remote_host setting is ignored and Xdebug will try to connect to the client that made the HTTP request.
; This is generally set to 0 in a laradock environment, and we use remote_host
xdebug.remote_connect_back=0
; The port that the IDE is listening on
; NOTE: php-fpm also uses port 9000, and this port gets exposed to the host, therefore creating a port conflict, so we 
; need to use a different port. We can use 9003, which is the xDebug 3 default (even thought we're on v2).
; See https://2.xdebug.org/docs/all_settings#remote_port
xdebug.remote_port=9003
; IDE-specific key that DBGp proxy needs to understand how to communicate with a specific IDE
; See https://2.xdebug.org/docs/all_settings#idekey
xdebug.idekey=PHPSTORM

; If set to 1, xDebug will try to start a debug session on every request. If 0, you'll need to set a specific GET/POST 
; var (ie. using the xDebug Helper Browser Extension), or a cookie to trigger xDebug to start a debug session.
; See https://2.xdebug.org/docs/all_settings#remote_autostart
xdebug.remote_autostart=1
; Turns on xDebug
; See https://2.xdebug.org/docs/all_settings#remote_enable
xdebug.remote_enable=1
; Colorize var_dumps and stack traces when using in CLI mode
; See https://2.xdebug.org/docs/all_settings#cli_color
xdebug.cli_color=0
; Turn on the performance profiler
; See https://2.xdebug.org/docs/all_settings#profiler_enable
xdebug.profiler_enable=0
; Profiler profile data output directory
; See https://2.xdebug.org/docs/all_settings#profiler_output_dir
xdebug.profiler_output_dir="~/xdebug/phpstorm/tmp/profiling"

; The DBGp [debugger proxy] protocol is the only supported protocol
xdebug.remote_handler=dbgp
; https://xdebug.org/docs/all_settings#remote_mode
; jit - Xdebug will only try to connect to the debug client as soon as an error condition occurs.
; req - Xdebug will try to connect to the debug client as soon as the script starts (probably want this for debugging)
xdebug.remote_mode=req

; Set the xdebug log file location to something easy to access
; See https://2.xdebug.org/docs/all_settings#remote_log
; See https://2.xdebug.org/docs/all_settings#remote_log_level
xdebug.remote_log="/var/www/xdebug-php-fpm.log"

; See https://2.xdebug.org/docs/all_settings#var_display_max_children
xdebug.var_display_max_children=-1
; See https://2.xdebug.org/docs/all_settings#var_display_max_data
xdebug.var_display_max_data=-1
; See https://2.xdebug.org/docs/all_settings#var_display_max_depth
xdebug.var_display_max_depth=-1
